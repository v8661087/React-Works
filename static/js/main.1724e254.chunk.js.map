{"version":3,"sources":["components/todolist/Header.jsx","components/todolist/List.jsx","components/todolist/ToDoList.jsx","components/commentapp/CommentInput.jsx","components/commentapp/Comment.jsx","components/commentapp/CommentList.jsx","components/commentapp/CommentApp.jsx","components/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","type","onKeyUp","onChange","value","input","placeholder","onClick","onAdd","List","items","map","item","index","done","key","onCheck","modify","autoFocus","itemInput","onChangeItem","onItemKeyUp","onBlur","onModifyDone","title","onModify","onDelete","ToDoList","_useState","useState","_useState2","Object","slicedToArray","setInput","_useState3","_useState4","setItems","_useState5","_useState6","setItemInput","handleAdd","e","push","target","previousSibling","focus","useEffect","localStorage","getItem","list","JSON","parse","setItem","stringify","Fragment","todolist_Header","keyCode","todolist_List","filter","i","nextSibling","click","CommentInput","onNameChange","username","onCommentChange","content","cols","rows","onSubmit","Comment","timeString","setTimeString","_updateTimeString","duration","Date","now","comment","createdTime","concat","Math","round","max","_timer","setInterval","clearInterval","dangerouslySetInnerHTML","__html","replace","CommentList","comments","commentapp_Comment","CommentApp","setUsername","setContent","setComments","_saveComments","commentapp_CommentInput","obj","commentapp_CommentList","indexOf","splice","NavBar","react_router_dom","to","App","components_NavBar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1724e254.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>To-Do List</h1>\r\n            <input\r\n                className=\"header__input\"\r\n                type=\"text\"\r\n                onKeyUp={props.onKeyUp}\r\n                onChange={props.onChange}\r\n                value={props.input}\r\n                placeholder=\"type something...\"\r\n            />\r\n            <input\r\n                className=\"header__submit\"\r\n                type=\"submit\"\r\n                value=\"ADD\"\r\n                onClick={props.onAdd}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction List(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <ul>\r\n        {props.items.map((item, index) => (\r\n          <li\r\n            className={\r\n              item.done ? \"list-item checked\" : \"list-item\" //是否完成\r\n            }\r\n            key={index}\r\n          >\r\n            <span\r\n              className=\"list-item__done\"\r\n              onClick={() => props.onCheck(item)}\r\n            ></span>\r\n            {item.modify ? (\r\n              <input\r\n                type=\"text\"\r\n                className=\"list-item__input\"\r\n                autoFocus\r\n                value={props.itemInput}\r\n                onChange={props.onChangeItem}\r\n                onKeyUp={props.onItemKeyUp}\r\n                onBlur={() => props.onModifyDone(item)}\r\n              />\r\n            ) : item.done ? (\r\n              <span className=\"list-item-title check\">\r\n                {index + 1}. {item.title}\r\n              </span>\r\n            ) : (\r\n              <span\r\n                className=\"list-item-title\"\r\n                onClick={() => props.onModify(item)}\r\n              >\r\n                {index + 1}. {item.title}\r\n              </span>\r\n            )}\r\n            <span\r\n              className=\"list-item__delete\"\r\n              onClick={() => props.onDelete(item)}\r\n            >\r\n              x\r\n            </span>{\" \"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport List from \"./List\";\r\nfunction ToDoList() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n    const [itemInput, setItemInput] = useState(\"\");\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"items-list\")) {\r\n            const list = JSON.parse(localStorage.getItem(\"items-list\"));\r\n            setItems(list);\r\n        } else {\r\n            localStorage.setItem(\"items-list\", JSON.stringify(items));\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        localStorage.setItem(\"items-list\", JSON.stringify(items));\r\n    }, [items, handleAdd]);\r\n    function handleChange(e) {\r\n        setInput(e.target.value);\r\n    }\r\n    function handleAdd(e) {\r\n        if (input !== \"\") {\r\n            let item = { title: input, done: false, modify: false };\r\n            items.push(item);\r\n            setItems(items);\r\n            setInput(\"\");\r\n        } else {\r\n            e.target.previousSibling.focus();\r\n        }\r\n    }\r\n    function handleCheck(item) {\r\n        item.done = !item.done;\r\n        setItems(items.map(item => item));\r\n    }\r\n    function handleModify(item) {\r\n        if (item.modify === false) {\r\n            item.modify = true;\r\n            setItemInput(item.title);\r\n            setItems(items.map(item => item));\r\n        }\r\n    }\r\n    function handleModifyDone(item) {\r\n        if (itemInput !== \"\") {\r\n            if (item.modify === true) {\r\n                item.modify = false;\r\n                item.title = itemInput;\r\n                setItems(items.map(item => item));\r\n                setItemInput(\"\");\r\n            }\r\n        } else {\r\n            item.modify = false;\r\n            setItems(items.map(item => item));\r\n            setItemInput(\"\");\r\n        }\r\n    }\r\n    function handleItemChange(e) {\r\n        setItemInput(e.target.value);\r\n    }\r\n    function handleDelete(item) {\r\n        setItems(items.filter(i => i !== item));\r\n    }\r\n    function handleKeyUp(e) {\r\n        if (e.keyCode === 13 && e.target.value) {\r\n            handleAdd();\r\n        }\r\n    }\r\n    function handleItemKeyUp(e) {\r\n        if (e.keyCode === 13) {\r\n            e.target.nextSibling.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header\r\n                onAdd={handleAdd}\r\n                onChange={handleChange}\r\n                onKeyUp={handleKeyUp}\r\n                input={input}\r\n            />\r\n            <List\r\n                onCheck={handleCheck}\r\n                onModify={handleModify}\r\n                onModifyDone={handleModifyDone}\r\n                onDelete={handleDelete}\r\n                items={items}\r\n                itemInput={itemInput}\r\n                onChangeItem={handleItemChange}\r\n                onItemKeyUp={handleItemKeyUp}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\r\n\r\nfunction CommentInput(props) {\r\n  return (\r\n    <div className=\"commentapp-header\">\r\n      <div className=\"commentapp-field\">\r\n        <span className=\"commentapp-field-name\">用戶名:</span>\r\n        <div className=\"commentapp-field-input\">\r\n          <input type=\"text\"\r\n           onChange={props.onNameChange}\r\n           onBlur={props.onBlur}\r\n           value={props.username} />\r\n        </div>\r\n      </div>\r\n      <div className=\"commentapp-field\">\r\n        <span className=\"commentapp-field-name\">評論內容:</span>\r\n        <div className=\"commentapp-field-input\">\r\n          <textarea\r\n            onChange={props.onCommentChange}\r\n            value={props.content}\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            autoFocus\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div className=\"commentapp-field-button\">\r\n        <button onClick={props.onSubmit}>發佈</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentInput;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Comment(props) {\r\n  const [timeString, setTimeString] = useState(\"\");\r\n  useEffect(() => {\r\n    _updateTimeString();\r\n    const _timer = setInterval(_updateTimeString, 5000);\r\n    return () => clearInterval(_timer);\r\n  });\r\n  function _updateTimeString() {\r\n    const duration = (+Date.now() - props.comment.createdTime) / 1000;\r\n    setTimeString(\r\n      duration > 60\r\n        ? duration > 3600\r\n          ? `${Math.round(duration / 60 / 60)}小時前`\r\n          : `${Math.round(duration / 60)}分鐘前`\r\n        : `${Math.round(Math.max(duration, 1))}秒前`\r\n    );\r\n  }\r\n  function _getProcessedContent(content){\r\n    return content.replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\")\r\n    .replace(/'/g, \"&#039;\")\r\n    .replace(/`([\\S\\s]+?)`/g, '<code>$1</code>')\r\n  }\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"comment-user\">\r\n        <span>{props.comment.username} </span>：\r\n      </div>\r\n      <p dangerouslySetInnerHTML={{__html:_getProcessedContent(props.comment.content)}} />\r\n      <span className=\"comment-createdtime\">{timeString}</span>\r\n      <span\r\n        className=\"comment-delete\"\r\n        onClick={() => props.onDelete(props.comment)}\r\n      >\r\n        删除\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\"\r\nfunction CommentList(props) {\r\n  return (\r\n    <div>\r\n      {props.comments.map((comment, index) => (\r\n        <Comment  comment={comment} key={index} onDelete={()=>props.onDelete(comment)}/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default CommentList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CommentInput from \"./CommentInput\";\r\nimport CommentList from \"./CommentList\";\r\nimport \"../../commentApp.scss\";\r\nfunction CommentApp() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"username\")) {\r\n      setUsername(localStorage.getItem(\"username\"));\r\n    }\r\n    if (localStorage.getItem(\"comments\")) {\r\n      setComments(JSON.parse(localStorage.getItem(\"comments\")));\r\n    }\r\n  }, []);\r\n\r\n  function handleNameChange(e) {\r\n    setUsername(e.target.value);\r\n  }\r\n  function handleCommentChange(e) {\r\n    setContent(e.target.value);\r\n  }\r\n  function handleSubmit() {\r\n    if (username && content) {\r\n      const obj = { username, content, createdTime: +new Date() };\r\n      comments.push(obj);\r\n      setComments(comments);\r\n      setContent(\"\");\r\n      _saveComments();\r\n    }\r\n  }\r\n  function _saveUsername(e) {\r\n    localStorage.setItem(\"username\", e.target.value);\r\n  }\r\n  function _saveComments() {\r\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\r\n  }\r\n\r\n  function handleDelete(comment) {\r\n    const index = comments.indexOf(comment);\r\n    comments.splice(index, 1);\r\n    setComments(comments.map(comment=>comment));\r\n    _saveComments();\r\n  }\r\n  return (\r\n    <div className=\"commentapp\">\r\n      <CommentInput\r\n        onNameChange={handleNameChange}\r\n        onCommentChange={handleCommentChange}\r\n        onSubmit={handleSubmit}\r\n        onBlur={_saveUsername}\r\n        username={username}\r\n        content={content}\r\n      />\r\n      <CommentList comments={comments} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentApp;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NavBar = () => {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <li>\r\n                    <Link to=\"To-Do-List\">To-Do-List</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"CommentApp\">CommentApp</Link>\r\n                </li>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\nimport \"./todolist.scss\";\nimport ToDoList from \"./components/todolist/ToDoList\";\nimport CommentApp from \"./components/commentapp/CommentApp\";\nimport \"./commentApp.scss\";\nimport { HashRouter,Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <NavBar />\n            <Route path=\"/To-Do-List\" component={ToDoList} />\n            <Route path=\"/CommentApp\" component={CommentApp} />\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}